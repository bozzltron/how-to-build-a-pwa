{"version":3,"sources":["serviceWorker.js","Prompt.js","App.js","useFortune.js","useIOSPrompt.js","index.js"],"names":["navigator","window","addEventListener","serviceWorker","register","Prompt","useState","style","setStyle","useEffect","setTimeout","className","src","alt","App","fortune","setFortune","a","fetch","then","res","json","fortunes","rando","Math","floor","random","length","message","fetchData","useFortune","showPrompt","setShowPrompt","userAgent","toLowerCase","test","isIos","standalone","useIOSPrompt","ReactDOM","render","document","getElementById"],"mappings":"gHACQ,kBAAmBA,WAErBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cAAcC,SAAS,0B,+GCoB1BC,MAtBf,WAAmB,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,KAchB,OAXAC,qBAAU,WAGNC,YAAW,WACTF,EAAS,UAET,QAMJ,yBAAKG,UAAS,iBAAYJ,IAA1B,2CAC0C,yBAAKK,IAAI,YAAYC,IAAI,oBADnE,gCCCWC,MAbf,WACE,IAAIC,ECHS,WAAuB,IAAD,EACLT,mBAAS,IADJ,mBAC5BS,EAD4B,KACnBC,EADmB,KAcnC,OAXAP,qBAAU,WAAM,4CACd,8BAAAQ,EAAA,sEACuBC,MAAM,uDAAuDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UADpG,QACMC,EADN,UAGQC,EAAQC,KAAKC,MAAMD,KAAKE,SAAWJ,EAASK,QAAU,EAC1DX,EAAWM,EAASC,GAAOK,UAJ/B,4CADc,uBAAC,WAAD,wBAQdC,KACC,IAEId,EDXOe,GACVC,EELS,WAAyB,IAAD,EACDzB,oBAAS,GADR,mBAC9ByB,EAD8B,KAClBC,EADkB,KAkBrC,OAfAvB,qBAAU,YAEI,WACV,IAAMwB,EAAYhC,OAAOD,UAAUiC,UAAUC,cAC7C,MAAO,mBAAmBC,KAAMF,GAM9BG,IAH4B,eAAgBnC,OAAOD,WAAeC,OAAOD,UAAUqC,YAIrFL,GAAc,KAEf,IAEID,EFbUO,GAEjB,OACE,yBAAK3B,UAAU,OACb,yBAAKA,UAAU,OAAOC,IAAI,oBAAoBC,IAAI,wBAClD,2BAAIE,GACFgB,EAAa,kBAAC,EAAD,MAAa,O,MGRlCQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.f617be7b.chunk.js","sourcesContent":["    // Check that service workers are supported\n    if ('serviceWorker' in navigator) {\n      // Use the window load event to keep the page load performant\n      window.addEventListener('load', () => {\n        navigator.serviceWorker.register('/service-worker.js');\n      });\n    }","import React, {useEffect, useState} from 'react';\n\nfunction Prompt() {\n  const [style, setStyle] = useState(\"\");\n\n  useEffect(() => {\n    \n    // if(localStorage.getItem('promptDisplayed')!== true) {\n      setTimeout(()=>{\n        setStyle('show')\n        // localStorage.setItem('promptDisplayed', true);\n      },500)\n    // }\n    \n  });\n\n  return (\n    <div className={`prompt ${style}`}>\n      Install this webapp on your iphone: tap <img src=\"/home.png\" alt=\"iOS home button\" /> \n      and then add to homescreen.\n    </div>\n  );\n}\n\nexport default Prompt;\n","import React from 'react';\nimport useFortune from './useFortune';\nimport useIOSPrompt from './useIOSPrompt';\nimport Prompt from './Prompt';\n\nfunction App() {\n  var fortune = useFortune();\n  var showPrompt = useIOSPrompt();\n\n  return (\n    <div className=\"App\">\n      <img className=\"logo\" src=\"/logo-512x512.png\" alt=\"Fortune Cookie logo\" />\n      <p>{fortune}</p>\n      { showPrompt ? <Prompt /> : null}\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\nimport 'whatwg-fetch'\n\nexport default function useFortune() {\n  const [fortune, setFortune] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData(){\n      let fortunes = await fetch('https://fortunecookieapi.herokuapp.com/v1/fortunes/').then(res => res.json())\n      if(fortunes){\n        let rando = Math.floor(Math.random() * fortunes.length) + 1  \n        setFortune(fortunes[rando].message);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return fortune;\n}","import { useEffect, useState } from 'react';\n\nexport default function useIOSPrompt() {\n  const [showPrompt, setShowPrompt] = useState(false);\n\n  useEffect(() => {\n    // Detects if device is on iOS \n    let isIos = function() {\n      const userAgent = window.navigator.userAgent.toLowerCase();\n      return /iphone|ipad|ipod/.test( userAgent );\n    }\n    // Detects if device is in standalone mode\n    let isInStandaloneMode = () => ('standalone' in window.navigator) && (window.navigator.standalone);\n\n    // Checks if should display install popup notification:\n    if (isIos() && !isInStandaloneMode()) {\n      setShowPrompt(true);\n    }\n  }, [])\n\n  return showPrompt;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}